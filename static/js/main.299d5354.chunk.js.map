{"version":3,"sources":["components/List.js","components/Input.js","pages/TodoList.js","index.js"],"names":["List","this","props","renderTodos","Component","Input","htmlFor","ref","inp","input","value","inpValue","type","onChange","handleChange","TodoList","e","setState","target","addTodo","state","todos","title","done","alert","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","onClick","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","className","ReactDOM","render","document","getElementById"],"mappings":"6KAgBeA,E,uKAZJ,OAAM,6BACL,wDACA,4BACKC,KAAKC,MAAMC,aAAY,IAE5B,wDACA,4BACKF,KAAKC,MAAMC,aAAY,S,GATrBC,aCaJC,E,uKAZF,IAAD,OACJ,OAAM,6BACN,2BAAOC,QAAQ,OAAf,YACA,2BACIC,IAAK,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GACvBE,MAAOT,KAAKC,MAAMS,SAClBC,KAAK,OACLC,SAAUZ,KAAKC,MAAMY,oB,GARbV,aC6FLW,E,kDAzFX,aAAc,IAAD,8BACT,gBAMJD,aAAe,SAACE,GACZ,EAAKC,SAAS,CAACN,SAASK,EAAEE,OAAOR,SARxB,EAyBbS,QAAU,WACkB,IAArB,EAAKC,MAAMT,UAKV,EAAKM,SAAS,CACdI,MAAM,CACF,CACIC,MAAO,EAAKF,MAAMT,SAClBY,MAAM,IAHT,mBAKE,EAAKH,MAAMC,UAGtB,EAAKJ,SAAS,CAACN,SAAS,MAbpBa,MAAM,6BA3BD,EA4CbC,QAAU,SAACC,GACP,EAAKT,SAAS,CACVI,MAAO,EAAKD,MAAMC,MAAMM,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,QA9C/C,EAiDbI,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKd,MAAMC,QACpDU,EAASF,GAAON,MAAQQ,EAASF,GAAON,KACxC,EAAKN,SAAS,CACVI,MAAOU,KArDF,EAwDb5B,YAAc,SAACoB,GACX,OAAO,EAAKH,MAAMC,MAAMc,KAAI,SAACC,EAAKV,GAC9B,GAAGH,GAAMa,EAAKb,KACV,OAAO,4BACH,2BACIc,QAAS,kBAAI,EAAKP,OAAOJ,IACzBY,QAASf,EACTX,KAAK,aAET,0BAAM2B,wBAAyB,CAACC,OAAOJ,EAAKd,SAC5C,4BACIe,QAAS,kBAAI,EAAKZ,QAAQC,KAD9B,qBAhEZ,EAAKN,MAAQ,CACTT,SAAU,GACVU,MAAM,IAJD,E,gEAWT,IAAIA,EAAQoB,aAAaC,QAAQ,SAC9BrB,GACCpB,KAAKgB,SAAS,CACVI,MAAOW,KAAKC,MAAMZ,O,2CAK1BoB,aAAaE,QACT,QACAX,KAAKE,UAAUjC,KAAKmB,MAAMC,U,+BAsDxB,IAAD,EACoBpB,KAAKmB,MAAvBC,EADF,EACEA,MAAMV,EADR,EACQA,SACb,OACI,yBAAKiC,UAAU,OACX,kBAAC,EAAD,CACIjC,SAAUA,EACVG,aAAcb,KAAKa,eACvB,4BAAQuB,QAASpC,KAAKkB,SAAtB,gBACA,kBAAC,EAAD,CAAMhB,YAAaF,KAAKE,YAAasB,QAASxB,KAAKwB,QAASK,OAAQ7B,KAAK6B,OAAQT,MAAOA,S,GApFjFjB,aCQvByC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.299d5354.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass List extends Component { \r\n    render(){\r\n           return<div>\r\n            <h2>正在进行</h2>\r\n            <ul>\r\n                {this.props.renderTodos(false)}\r\n            </ul>\r\n            <h2>已经完成</h2>\r\n            <ul>\r\n                {this.props.renderTodos(true)}\r\n            </ul>\r\n           </div>\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n    render(){\r\n        return<div>\r\n        <label htmlFor=\"inp\">todolist</label>\r\n        <input \r\n            ref={inp=>this.input = inp}\r\n            value={this.props.inpValue} \r\n            type=\"text\" \r\n            onChange={this.props.handleChange}\r\n            />\r\n        </div>\r\n    }   \r\n}\r\nexport default Input;","import React, { Component } from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport List from '../components/List';\r\nimport Input from '../components/Input';\r\n\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    //添加\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            alert(\"不能为空\");\r\n            return;\r\n        }\r\n        else{\r\n            this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''});\r\n        }\r\n    }\r\n    //删除\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {       \r\n        const {todos,inpValue} = this.state;\r\n        return (\r\n            <div className=\"box\">\r\n                <Input \r\n                    inpValue={inpValue} \r\n                    handleChange={this.handleChange}/>\r\n                <button onClick={this.addTodo}>添加</button>\r\n                <List renderTodos={this.renderTodos} delTodo={this.delTodo} toggle={this.toggle} todos={todos}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","\n//import Home from './pages/Home';\n// import Control from './components/Control'\n// import Demo1 from './components/demo1'\n// import App from './pages/app';\n// import Hoc,{Detail}from './pages/Hoc'\n// import Hook from './pages/Hook';\n\n\nimport React, { createElement } from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport TodoList from './pages/TodoList';\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n// ReactDOM.render(\n//   //<Home data=\"abc\" />,\n//   //<Control />,\n//   //<Demo1 name='ww'/>,\n//   //<div><Hoc /><Detail /></div>,\n//   <Hook />,\n//   document.getElementById('root')\n// );\n\n\n//import  $ from 'jquery' \n\n//console.log($);\n\n// const List=(props)=>{\n//   return<ul>\n//     {\n//     props.data.map ((item)=> <li>{item.title}</li>)\n//     }\n//   </ul>\n// }\n\n// const Buttons=()=>{\n//   const btns=[1,2,3,4,5];\n//   return<div>\n//     {\n//       btns.map((item)=><button>{item}</button>)\n//     }\n//   </div>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     //this.handleClick=this.handleClick.bind(this)\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   getData=(page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page) //从上面拿到数据是promise类型的\n//         .then(res=> res.json()).then(({data})=>{//拿到的数据是个对象格式\n//           this.setState({data});//执行之后页面就会重新渲染\n//           console.log(page);\n//          })\n// \t}\n//   render(){\n//     const { data } = this.state;\n//     const btns=[1,2,3,4,5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button \n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//         ))\n//       }\n//       <List data={data}/>\n//     </div>\n//     // return <div>\n//     //   <Buttons />\n//     //   <List data={data}/>\n//     // </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Home />,\n//   document.getElementById('root')\n// );\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {\n//       data:[]\n//     }\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(data=>{\n//       this.setState({data:data.data})\n//     })\n//   }\n//   render(){\n//       const {data}=this.state;\n//       return <List data={data}/>\n//     // return <ul>\n//     //   {\n//     //     this.state.data.map(\n//     //      (item)=><li>{item.title}</li>\n//     //     )\n//     //   }\n//     // </ul>\n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {\n//       data:[]\n//     }\n//     setTimeout(()=>{\n//       this.setState({data:[5,6,7,8,9]})\n//     },500)\n//   }\n//   render(){\n//     return <ul>\n//       {\n//         this.state.data.map(\n//           (item)=><li>{item}</li>\n//         )\n//       }\n//     </ul>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n\n//let ele=<h1>hello world</h1>\n//let ele=React.createElement(\"h1\",{id:'title'},'hello react');\n\n//let ele=<h1  id='title' className=\"tit\"><div>hello</div>react</h1>\n// let ele=React.createElement(\n//   \"h1\",\n//   {id:'title'},\n//   React.createElement('div',{},\"hello\"),\n//   'react')\n// console.log(ele);\n\n// let ReactDom={\n//   render(eleObj,container){\n//     const{type,props}=eleObj;\n//     //创建第一层节点对象\n//     let ele=document.createElement(type);\n//     for(const prop in props){\n//       if(prop=='children')\n//       {\n\n//         props.children.forEach(child=> {\n//           if(typeof child=='string'){\n//             const txtNode=document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }\n//           else{\n//             React.render(child,ele);\n//           }\n//         });\n//       }\n//       else{\n//         ele[prop]=props[prop];\n//       }\n\n//     }\n//     container.appendChild(ele);\n//   }\n// }\n\n//let ele=<h1 id='title'>当前时间,{new Date().toLocaleDateString()}</h1>\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n\n//组件\n// function App(props){\n//   const{title}=props;\n//   return<div>\n//     <div>{title}</div>\n//     <div>world</div>\n//   </div>\n// }\n//智能组件\n// class Demo extends React.PureComponent{\n//   render(){\n//     return<div>\n//       <App title='任意值' id='app'/>\n//     </div>\n//   } \n// }\n\n\n\n//构造\n// class Demo extends React.PureComponent{\n//   constructor(){\n//     super();\n//     this.state={\n//       name:'tom'\n//     }\n//   }\n\n//   render(){\n//     return<div>\n//       name:{this.state.name}\n//     </div>\n//   } \n// }\n\n\n// ReactDOM.render(\n//   <Demo/>,\n//   document.getElementById('root')\n// );\n\n{/* ReactDOM.render(\n  <App title=\"任意值\" id='app'/>,\n  document.getElementById('root')\n); */}\n\n\n"],"sourceRoot":""}